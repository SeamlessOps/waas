name: 'Collect Deployment Metrics'
description: 'Collects deployment metrics and sends to dashboard API'
inputs:
  service_type:
    description: 'Service type'
    required: false
    default: 'unknown'
  environment:
    description: 'Deployment environment'
    required: true
  service:
    description: 'Deployed service'
    required: true
  status:
    description: 'Deployment status'
    required: true
  duration:
    description: 'Deployment duration'
    required: false
    default: '0'
  waas_api_url:
    description: 'WaaS API URL'
    required: false
  waas_api_key:
    description: 'WaaS API Key'
    required: false
  image_tag:
    description: 'New image tag to build and publish'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Collect Metrics and Update WaaS Dashboard
      id: update-waas-dashboard
      if: always()
      shell: bash
      env:
        SERVICE: ${{ inputs.service }}
        SERVICE_TYPE: ${{ inputs.service_type }}
        STATUS: ${{ inputs.status }}
        DURATION: ${{ inputs.duration }}
        ENVIRONMENT: ${{ inputs.environment }}
        IMAGE_TAG: ${{ inputs.image_tag }}
        WAAS_API_URL: ${{ inputs.waas_api_url }}
        WAAS_API_KEY: ${{ inputs.waas_api_key }}
        COMMIT_HASH: ${{ github.sha }}
        COMMIT_AUTHOR: ${{ github.actor }}
        PIPELINE_ID: ${{ github.run_id }}
        COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        ACTIONS_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        REPOSITORY: ${{ github.event.repository.name }}
      run: |
        set -e

        SHORT_HASH=$(echo "${COMMIT_HASH::7}")
        TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%S.%6N")

        echo "[INFO] - üß© Service: $SERVICE"
        echo "[INFO] - üß≠ Type: $SERVICE_TYPE"
        echo "[INFO] - üìã Image Tag: $IMAGE_TAG"
        echo "[INFO] - üèõÔ∏è Repository: $REPOSITORY"
        echo "[INFO] - üö¶ Status: $STATUS"
        echo "[INFO] - üë§ Commit Author: $COMMIT_AUTHOR"
        echo "[INFO] - ‚è≥ Commit Hash: $SHORT_HASH"
        echo "[INFO] - üìù Commit Message: $COMMIT_MESSAGE"
        echo "[INFO] - ü§ñ Action URL: $ACTIONS_URL"
        echo "[INFO] - ‚è≥ Timestamp: $TIMESTAMP"
        echo "[INFO] - ‚è±Ô∏è Duration: $DURATION"
        echo "[INFO] - üåé Environment: $ENVIRONMENT"

        echo "Sending metrics to WaaS Dashboard..."
        echo "----------------------------------------"

        # Use jq to properly format the JSON with escaped characters
        JSON_PAYLOAD=$(jq -n \
          --arg environment "$ENVIRONMENT" \
          --arg service "$SERVICE" \
          --arg service_type "$SERVICE_TYPE" \
          --arg status "$STATUS" \
          --argjson duration_seconds "$DURATION" \
          --arg timestamp "$TIMESTAMP" \
          --arg commit_hash "$SHORT_HASH" \
          --arg commit_author "$COMMIT_AUTHOR" \
          --arg commit_message "$COMMIT_MESSAGE" \
          --arg actions_url "$ACTIONS_URL" \
          --arg image_tag "$IMAGE_TAG" \
          --arg pipeline_id "$PIPELINE_ID" \
          --arg triggered_by "$COMMIT_AUTHOR" \
          '{
            environment: $environment,
            service: $service,
            service_type: $service_type,
            status: $status,
            duration_seconds: $duration_seconds,
            timestamp: $timestamp,
            commit_hash: $commit_hash,
            commit_author: $commit_author,
            commit_message: $commit_message,
            actions_url: $actions_url,
            image_tag: $image_tag,
            pipeline_id: $pipeline_id,
            triggered_by: $triggered_by
          }')

        echo "Payload being sent:"
        echo "$JSON_PAYLOAD"
        echo "----------------------------------------"

        curl -s -w "\nHTTP %{http_code}\n" -o response.txt \
          -X POST "$WAAS_API_URL/api/deployments" \
          -H "Content-Type: application/json" \
          -H "X-API-Key: $WAAS_API_KEY" \
          -d "$JSON_PAYLOAD"

        echo "----------------------------------------"
        echo "[RESPONSE BODY]"
        cat response.txt
        echo "----------------------------------------"
